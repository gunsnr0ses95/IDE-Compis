program		1		TKN_PROGRAM
{		1		TKN_LBRACE
int		2		TKN_INT
x		2		TKN_ID
,		2		TKN_COMMA
y		2		TKN_ID
;		2		TKN_SEMICOLON
float		3		TKN_FLOAT
a		3		TKN_ID
,		3		TKN_COMMA
b		3		TKN_ID
,		3		TKN_COMMA
c		3		TKN_ID
;		3		TKN_SEMICOLON
bool		4		TKN_BOOL
band		4		TKN_ID
;		4		TKN_SEMICOLON
x		5		TKN_ID
=		5		TKN_ASSIGN
0		5		TKN_NUM
;		5		TKN_SEMICOLON
y		6		TKN_ID
=		6		TKN_ASSIGN
4.8		6		TKN_NUM_FLOAT
;		6		TKN_SEMICOLON
band		7		TKN_ID
=		7		TKN_ASSIGN
true		7		TKN_TRUE
;		7		TKN_SEMICOLON
a		8		TKN_ID
=		8		TKN_ASSIGN
3.11		8		TKN_NUM_FLOAT
;		8		TKN_SEMICOLON
b		9		TKN_ID
=		9		TKN_ASSIGN
0		9		TKN_NUM
;		9		TKN_SEMICOLON
z		10		TKN_ID
=		10		TKN_ASSIGN
a		10		TKN_ID
;		10		TKN_SEMICOLON
a		11		TKN_ID
=		11		TKN_ASSIGN
4.17		11		TKN_NUM_FLOAT
;		11		TKN_SEMICOLON
a		12		TKN_ID
=		12		TKN_ASSIGN
b		12		TKN_ID
+		12		TKN_ADD
2.0		12		TKN_NUM_FLOAT
;		12		TKN_SEMICOLON
do		13		TKN_DO
{		13		TKN_LBRACE
if		14		TKN_IF
(		14		TKN_LPARENT
x		14		TKN_ID
<		14		TKN_LTHAN
y		14		TKN_ID
)		14		TKN_RPARENT
{		14		TKN_LBRACE
y		15		TKN_ID
=		15		TKN_ASSIGN
y		15		TKN_ID
-		15		TKN_MINUS
1		15		TKN_NUM
;		15		TKN_SEMICOLON
}		16		TKN_RBRACE
fi		17		TKN_FI
}		17		TKN_RBRACE
until		17		TKN_UNTIL
(		17		TKN_LPARENT
y		17		TKN_ID
>=		17		TKN_GETHAN
0		17		TKN_NUM
)		17		TKN_RPARENT
;		17		TKN_SEMICOLON
}		18		TKN_RBRACE
$		18		TKN_EOF
